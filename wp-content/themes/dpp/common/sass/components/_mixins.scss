/* Mobile first  @media support fix */
@mixin respond-min($width) {

	@if $mediaQuerySuport {
		/* If you support @media  */
		 @media screen and (min-width: $width) {
            			@content;
        		}
	}
	@else {
		/* Else spit out all the styles for mq-fallback.scss*/
		@content;
	}
}

/* Boxshadow */
@mixin boxshadow($value) {
 -webkit-box-shadow: #{$value};
  -moz-box-shadow: #{$value};
  	box-shadow: #{$value};
}

/* Linear Gradient */
@mixin gradient-verticle($from, $to, $ie: $useIEFilters) {
  background-color: $to;
  background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, $from),color-stop(1, $to));
  background-image: -webkit-linear-gradient(top, $from, $to);
  background-image: -moz-linear-gradient(top, $from, $to);
  background-image: -ms-linear-gradient(top, $from, $to);
  background-image: -o-linear-gradient(top, $from, $to);
  background-image: linear-gradient(top, bottom, $from, $to);

  @if $ie == 1 {
    	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
     	ms-filter: quote(progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($from)}', endColorstr='#{ie-hex-str($to)}'));
  }
}

/* 3 Colour Linear Gradient */
@mixin gradient-vertical-three-colors($from: #00b3ee, $mid: #7a43b6, $colorStop: 50%, $end: #c3325f, $ie: $useIEFilters) {

  background-color: mix($mid, $end, 80%);
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($from), color-stop($colorStop, $mid), to($end));
  background-image: -webkit-linear-gradient($from, $mid $colorStop, $end);
  background-image: -moz-linear-gradient(top, $from, $mid $colorStop, $end);
  background-image: -o-linear-gradient($from, $mid $colorStop, $end);
  background-image: linear-gradient($from, $mid $colorStop, $end);
  background-repeat: no-repeat;

  @if $ie == 1 {
  	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($from)}', endColorstr='#{ie-hex-str($end)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
  }
}

/* Border radius - removed vendor prefixs*/
@mixin border-radius($value) {
	border-radius:  #{$value};
}

/* Rotation */
@mixin rotate ($value) {
	transform:rotate($value);
	-ms-transform:rotate($value);
	-moz-transform:rotate($value);
	-webkit-transform:rotate($value);
	-o-transform:rotate($value);
}

/* Inline block */
@mixin inline-block {
	display:inline-block;
	*display:inline;
	*zoom:1;
}

/* Font conversion */
@function pxtoem($px, $basepx){
	@return ($px/$basepx)+0em;
}

/* Hex to rgba */
@function toRGBA($color, $opacity: 0.5){
	@return rgba($color, $opacity);
}


